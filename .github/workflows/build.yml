name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { icon: 'ðŸŸ¦', sys: clang64, mode: dynamic }
          - { icon: 'ðŸŸ¦', sys: clang64, mode: static }

    name: ðŸš§${{ matrix.icon }} ${{ matrix.sys }} Build ${{ matrix.mode }}
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@main

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        update: true
        install: >-
          git
          make
          bison
          diffutils
          flex
          grep
          sed
          base-devel
          python
          python-setuptools
        pacboy: >-
          toolchain:p
          toolchain:a
          binutils:a
          capstone:a
          ccache:a
          curl:a
          cyrus-sasl:a
          dtc:a
          glib2:a
          gnutls:a
          gtk3:a
          libgcrypt:a
          libjpeg-turbo:a
          libnfs:a
          libpng:a
          libssh:a
          libtasn1:a
          libusb:a
          lzo2:a
          nettle:a
          ninja:p
          pixman:a
          pkgconf:p
          python:p
          SDL2:a
          SDL2_image:a
          snappy:a
          spice:a
          usbredir:a
          zstd:a
          libslirp:a

    - name: 'Modify pkgconfig to avoid linker issues'
      if: ${{ matrix.mode == 'static' }}
      run: |
             PKGCONFIG_FILE="/clangarm64/lib/pkgconfig/gpg-error.pc"
             sed -i 's#/clangarm64/lib/libintl.dll.a#-llibintl#g' "$PKGCONFIG_FILE"
             sed -i 's#/clangarm64/lib/libiconv.dll.a#-llibiconv#g' "$PKGCONFIG_FILE"

    - name: 'ðŸš§ Build QEMU (arm & aarch64) ${{ matrix.mode }}'
      env:
        arg: ${{ matrix.mode == 'dynamic' && '--enable-gtk --enable-sdl --enable-fdt=system --target-list=arm-softmmu,aarch64-softmmu --extra-cflags="-Wno-missing-prototypes -Wno-sometimes-uninitialized -Wno-pragma-pack"' || '--disable-gtk --disable-spice --disable-usb-redir --disable-smartcard --disable-gnutls --disable-vnc-sasl --disable-libssh --enable-sdl --enable-fdt=system --target-list=arm-softmmu,aarch64-softmmu --static --extra-cflags="-Wno-missing-prototypes -Wno-sometimes-uninitialized -Wno-pragma-pack -DCURL_STATICLIB -DLIBSSH_STATIC -DLIBSLIRP_STATIC -DCAIRO_WIN32_STATIC_BUILD"' }}
      run: |
          sed -i 's/\[clangarm64\]/\[cross-clang\]\nServer = https\:\/\/github.com\/msys2\-arm\/cross\-clang\/releases\/download\/repo\n\SigLevel = Never\n\[clangarm64\]/' /etc/pacman.conf
          pacman -Sy
          pacman --noconfirm -S mingw-w64-clang-x86_64-cross-clang-aarch64
          sed -i 's/gcc_struct, //' include/qemu/compiler.h
          sed -i 's/gcc_struct, //' scripts/cocci-macro-file.h
          sed -i 's/gcc_struct, //' subprojects/libvhost-user/libvhost-user.h
          ln /clang64/bin/pkg-config.exe /clang64/bin/aarch64-w64-mingw32-pkg-config.exe
          ln /usr/bin/windmc.exe /clang64/bin/aarch64-w64-mingw32-windmc.exe
          sed -i -s 's/bindir=\${prefix}\/bin/bindir=\/clang64\/bin/' /clangarm64/lib/pkgconfig/*.pc
          export PKG_CONFIG_PATH=/clangarm64/lib/pkgconfig:/clangarm64/share/pkgconfig:$PKG_CONFIG_PATH
          export PKG_CONFIG_SYSTEM_INCLUDE_PATH=/clangarm64/include:$PKG_CONFIG_SYSTEM_INCLUDE_PATH
          export PKG_CONFIG_SYSTEM_LIBRARY_PATH=/clangarm64/lib:$PKG_CONFIG_SYSTEM_LIBRARY_PATH
          ./configure ${{ env.arg }} --cross-prefix="aarch64-w64-mingw32-"
          make -j16

    - name: Prepare Artifacts
      shell: cmd
      run: |
          md ${{ github.workspace }}\artifacts
          cd ${{ github.workspace }}\artifacts
          move D:\a\qemu\qemu\build\*.exe
          move D:\a\qemu\qemu\build\pc-bios share
          robocopy D:\a\qemu\qemu\pc-bios share /xn /xo /mov
          del share\*.bz2

    - name: Prepare Artifacts (dynamic only)
      shell: cmd
      if: ${{ matrix.mode == 'dynamic' }}
      run: |
          cd ${{ github.workspace }}\artifacts
          copy ${{ steps.msys2.outputs.msys2-location }}\mingw64\bin\*.dll
          md lib\gdk-pixbuf-2.0\2.10.0
          fsutil file createNew lib\gdk-pixbuf-2.0\2.10.0\loaders.cache 0
          move D:\a\qemu\qemu\build\po share\locale

    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: QEMU (${{ matrix.mode }} build)
        path: ${{ github.workspace }}/artifacts
        compression-level: 9

    - name: Upload logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@main
      with:
        name: QEMU (${{ matrix.mode }} build) logs
        path: ${{ github.workspace }}/build/meson-logs
        compression-level: 9
